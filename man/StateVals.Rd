% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/statevals.R
\name{StateVals}
\alias{StateVals}
\title{Model for state values}
\description{
Simulate values (i.e., utility or costs) associated with health states in a
state transition or partitioned survival model.
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{params}}{Parameters for simulating state values. Currently supports
objects of class \link{tparams_mean} or \link{params_lm}.}

\item{\code{input_mats}}{An object of class \link{input_mats}. Only used for
\link{params_lm} objects.}

\item{\code{time_reset}}{If \code{FALSE} then time intervals are based on time since
the start of the simulation. If \code{TRUE}, then time intervals reset each
time a patient enters a new health state. This is relevant if, for example,
costs vary over time within health states.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{StateVals$new()}}
\item \href{#method-sim}{\code{StateVals$sim()}}
\item \href{#method-check}{\code{StateVals$check()}}
\item \href{#method-clone}{\code{StateVals$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\subsection{Method \code{new()}}{
Create a new \code{StateVals} object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StateVals$new(params, input_mats = NULL, time_reset = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{params}}{The \code{params} field.}

\item{\code{input_mats}}{The \code{input_mats} field.}

\item{\code{time_reset}}{The \code{time_reset} field.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new \code{StateVals} object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-sim"></a>}}
\subsection{Method \code{sim()}}{
Simulate state values with either predicted means or random samples by
treatment strategy, patient, health state, and time \code{t}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StateVals$sim(t, type = c("predict", "random"))}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{t}}{A numeric vector of times.}

\item{\code{type}}{\code{"predict"} for mean values or \code{"random"} for random samples.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A \code{data.table} of simulated state values with columns for \code{sample},
\code{strategy_id}, \code{patient_id}, \code{state_id}, \code{time}, and \code{value}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-check"></a>}}
\subsection{Method \code{check()}}{
Input validation for class. Checks that fields are the correct type.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StateVals$check()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StateVals$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
