% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/params.R
\name{form_params}
\alias{form_params}
\alias{form_params.lm}
\alias{form_params.flexsurvreg}
\alias{form_params.flexsurvreg_list}
\alias{form_params.partsurvfit}
\title{Parameters from a fitted model}
\usage{
form_params(object, n = 1000, point_estimate = FALSE, ...)

\method{form_params}{lm}(object, n = 1000, point_estimate = FALSE, ...)

\method{form_params}{flexsurvreg}(object, n = 1000, point_estimate = FALSE,
  ...)

\method{form_params}{flexsurvreg_list}(object, n = 1000,
  point_estimate = FALSE, ...)

\method{form_params}{partsurvfit}(object, n = 1000, point_estimate = FALSE,
  bootstrap = TRUE, max_errors = 0, ...)
}
\arguments{
\item{object}{A statistical model to randomly sample parameters from.}

\item{n}{Number of random observations to draw.}

\item{point_estimate}{If TRUE, then the point estimates are returned and
and no samples are drawn.}

\item{...}{Further arguments passed to or from other methods. Currently unused.}

\item{bootstrap}{If \code{bootstrap} is FALSE or not specified, then \code{n} parameter sets are 
drawn by sampling from a multivariate normal distribution. If \code{bootstrap} is TRUE, then 
parameters are bootstrapped using \code{\link{bootstrap}}.}

\item{max_errors}{Equivalent to the \code{max_errors} argument in \code{\link{bootstrap}}.}
}
\value{
An object prefixed by \code{params_}. Mapping between \code{form_params} 
and the classes of the returned objects are: 
\itemize{
\item{\code{form_params.lm} ->}{ \code{params_lm}}
\item{\code{form_params.flexsurvreg} ->}{ \code{params_surv}}
\item{\code{form_params.flexsurvreg_list} ->}{ \code{params_surv_list}}
\item{\code{form_params.partsurvfit} ->}{ \code{params_surv_list}}
}
}
\description{
\code{form_params} is a generic function for constructing parameters from
a fitted statistical model. A sample from the posterior distribution of 
parameters is returned.
}
\examples{
# form_params.lm
fit <- stats::lm(costs ~ female, data = part_surv4_simdata$costs$medical)
n <- 5
params.lm <- form_params(fit, n = n)
head(params.lm$coefs)
head(params.lm$sigma)

# form_params.flexsurvreg
library("flexsurv")
fit <- flexsurv::flexsurvreg(formula = Surv(futime, fustat) ~ 1, 
                    data = ovarian, dist = "weibull")
n <- 5
params.surv <- form_params(fit, n = n)
print(params.surv$dist)
head(params.surv$coefs)
}
